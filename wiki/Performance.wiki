#summary Performance of the library.

= Introduction =

Currently the library uses Java reflection API. That's why the current implementation is slower than implementing e.g. equals() manually. On the other hand the performance difference may be acceptable in particular cases. Additionally, nothing in the JAU API prevents an implementation using code generation or other techniques.

= Details =

Performance reports:

equals():

* Test: http://code.google.com/p/jau/source/browse/trunk/JAU/test/com/googlecode/jau/EqualsJAUPerfTest_.java
* Results: http://jau.googlecode.com/svn/trunk/JAU/reports/equals/index.html

equals() for classes with different number of int fields:

* Sample: 
http://code.google.com/p/jau/source/browse/trunk/JAU/test/com/googlecode/jau/IntFields32.java
* Test: http://code.google.com/p/jau/source/browse/trunk/JAU/test/com/googlecode/jau/EqualsJAUStringPerfTest_.java
* Results: 
http://jau.googlecode.com/svn/trunk/JAU/reports/equalsBigString/index.html

equals():

* Test: http://code.google.com/p/jau/source/browse/trunk/JAU/test/com/googlecode/jau/EqualsJAUIntPerfTest_.java
* Results: http://jau.googlecode.com/svn/trunk/JAU/reports/equalsInt/index.html

hashCode():

* Test: http://code.google.com/p/jau/source/browse/trunk/JAU/test/com/googlecode/jau/HashCodeJAUPerfTest_.java
* Results: http://jau.googlecode.com/svn/trunk/JAU/reports/hashCode/index.html

toString():

* Test: http://code.google.com/p/jau/source/browse/trunk/JAU/test/com/googlecode/jau/ToStringPerfTest_.java
* Results: http://jau.googlecode.com/svn/trunk/JAU/reports/toString/index.html

